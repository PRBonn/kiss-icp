# MIT License
#
# Copyright (c) 2022 Ignacio Vizzo, Tiziano Guadagnino, Benedikt Mersch, Cyrill
# Stachniss.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
stages:
  - format
  - build
cache:
  paths:
    - .cache/pip

#----- format stage --------------------------------------------------------------------------------
black:
  image: python:3.8
  stage: format
  before_script:
    - pip install black
  script:
    - black --line-length 100 --check $CI_PROJECT_DIR

clang-format:
  image: ubuntu:22.04
  stage: format
  before_script:
    - apt-get update && apt-get install --no-install-recommends -y clang-format
  script:
    - clang-format -Werror --dry-run $(find . -regextype posix-extended -regex ".*\.(cpp|hpp|h)")

#----- build stage ---------------------------------------------------------------------------------
cpp_api:gcc:
  image: ubuntu:22.04
  stage: build
  before_script:
    - apt-get update && apt-get install --no-install-recommends -y g++ cmake make
  script:
    - cmake -Bbuild cpp/kiss_icp/
    - cmake --build build -j$(nproc --all)

cpp_api:clang:
  image: ubuntu:22.04
  stage: build
  before_script:
    - apt-get update && apt-get install --no-install-recommends -y clang cmake make
  script:
    - cmake cmake -DCMAKE_CXX_COMPILER=clang++ -Bbuild cpp/kiss_icp/
    - cmake --build build -j$(nproc --all)

pip_package:
  image: python:3.8
  stage: build
  script:
    - VERBOSE=1 pip install --verbose ./python/
    - kiss_icp_pipeline --version

ros1_melodic:
  image: osrf/ros:melodic-desktop-full
  stage: build
  before_script:
    - apt-get update && sudo apt-get install -y gpg wget
    - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
    - echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ bionic main' | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null && apt update
    - rm /usr/share/keyrings/kitware-archive-keyring.gpg
    - apt-get install -y kitware-archive-keyring
    - apt-get install -y cmake
  script:
    - rm -rf ~/catkin_ws/
    - mkdir -p ~/catkin_ws/
    - cp -r ${CI_PROJECT_DIR} ~/catkin_ws/src
    - cd ~/catkin_ws/
    - catkin_make

ros1_noetic:
  image: osrf/ros:noetic-desktop-full
  stage: build
  before_script:
    - rm -rf ~/catkin_ws/
    - mkdir -p ~/catkin_ws/
    - cp -r ${CI_PROJECT_DIR} ~/catkin_ws/src
  script:
    - cd ~/catkin_ws/
    - catkin_make

ros2_foxy:
  image: osrf/ros:foxy-desktop
  stage: build
  script:
    - colcon build --event-handlers console_direct+

ros2_humble:
  image: osrf/ros:humble-desktop
  stage: build
  script:
    - colcon build --event-handlers console_direct+
